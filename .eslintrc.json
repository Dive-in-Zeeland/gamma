/*
rules: {
    indent: [error, 2, { SwitchCase: 1 }],
    'linebreak-style': [2, 'unix'],
    quotes: [error, 'single', { avoidEscape: true }],
    semi: [error, 'always'],
    'no-empty-function': off,
    '@typescript-eslint/no-empty-function': off,
    'react/display-name': off,
    'react/prop-types': off,
    'prettier/prettier': [
      error,
      {
        bracketSameLine: true,
        singleQuote: true,
        trailingComma: 'all',
        printWidth: 80,
      },
    ],
    'no-restricted-imports': [
      error,
      {
        paths: [
          {
            name: 'styled-components',
            message: 'Use styled-components/native.',
          },
        ],
        patterns: ['!styled-components/native'],
      },
    ],
    '@typescript-eslint/no-unsafe-assignment': warn,
    '@typescript-eslint/no-unsafe-member-access': warn,
    '@typescript-eslint/no-unsafe-call': warn,
    '@typescript-eslint/no-unsafe-return': warn,
    '@typescript-eslint/no-unsafe-argument': warn,
    '@typescript-eslint/no-explicit-any': off,
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": [error],
    "@typescript-eslint/ban-types": off,
  },
*/

{
  "extends": [
    "airbnb",
    "airbnb/hooks",
    "plugin:@typescript-eslint/recommended",
    "prettier",
    "plugin:prettier/recommended"
  ],
  "plugins": ["@typescript-eslint", "react", "prettier", "jest"],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2018,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "env": {
    "jest/globals": true
  },
  "rules": {
    "import/no-unresolved": 0,
    "react/jsx-filename-extension": [1, {
      "extensions": [
        ".ts",
        ".tsx"
      ]
    }],
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true,
        "trailingComma": "all",
        "arrowParens": "avoid",
        "endOfLine": "auto"
      }
    ],
    "no-use-before-define": "off",
    "import/extensions": ["error", "never"],
    "react/prop-types": 0,
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": ["error"],
    "react/react-in-jsx-scope": "off",
    // Rules when lazy to adjust to default rules
    "import/prefer-default-export": "off", // To fix we need to rewrite every export
    "react/function-component-definition": "off", // Same as above
    "import/no-extraneous-dependencies": "off", // Had problem with importing "@expo/vector-icons"
    "global-require": "off", // For requiring images
    "react/jsx-no-bind": "off", // https://stackoverflow.com/questions/36677733/why-shouldnt-jsx-props-use-arrow-functions-or-bind
    "@typescript-eslint/ban-types": [ // To use {} as type
      "error",
      {
        "extendDefaults": true,
        "types": {
          "{}": false
        }
      }
    ],
    "react/no-array-index-key": "warn", // Because this is sometimes OK
    "no-void": "off" // To intentianally use void type
  }
}